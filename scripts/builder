#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [ -n "${1}" ]; then
  task="${@}"
else
  task="make"
fi

ROOT_DIR="$(pwd)/"
IMAGES_DIR="$(pwd)/devkit/images"

ROOT_CONTAINER=${ROOT_CONTAINER:-"zodiac-build-container"}

DL_CACHE_VOLUME="zodiac-build-dlcache"
TMP_VOLUME="zodiac-build-tmp"
BUILD_VOLUME="zodiac-build-build"

ENVIRONMENT_FILE=".local-env"

INTERACTIVE=""
if [ -n "${TERM}" ]; then
  INTERACTIVE="-it"
fi

LOCAL_ENV=""
if [ -f "${ENVIRONMENT_FILE}" ]; then
  echo "Using local environment: ${ENVIRONMENT_FILE}"
  LOCAL_ENV="--env-file ${ENVIRONMENT_FILE}"
fi

if [ -n "${SSH_KEY_DIR}" ]; then
  eval $(ssh-agent -a $(pwd)/.agent_bind_sock)
  ssh-add ${SSH_KEY_DIR}/id*
  SSH_FORWARDING="-v $(pwd)/.agent_bind_sock:/opt/.agent_bind_sock -v $(pwd)/${SSH_KEY_DIR}/:/root/.ssh/ --env SSH_AUTH_SOCK=/opt/.agent_bind_sock"
  echo "Using SSH keys: ${SSH_AUTH_SOCK}"
fi

docker run \
      --rm \
      --env BR2_DL_DIR=/opt/dlcache/ \
      --volume=${DL_CACHE_VOLUME}:/opt/dlcache/ \
      --volume=${BUILD_VOLUME}:/opt/devkit/build \
      --volume=${IMAGES_DIR}:/opt/devkit/images \
      --volume=${ROOT_DIR}:/opt/devkit \
      --volume=${TMP_VOLUME}:/tmp \
      --name=zodiac-build-task \
      -w="/opt/devkit" \
      ${SSH_FORWARDING} \
      ${LOCAL_ENV} \
      ${INTERACTIVE} \
      ${ROOT_CONTAINER} \
      ${task}

. ${SCRIPT_DIR}/chown-container

if [ -n "${SSH_KEY_DIR}" ]; then
  kill -TERM ${SSH_AGENT_PID}
fi
